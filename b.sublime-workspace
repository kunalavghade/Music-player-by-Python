{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"col",
				"closeBtn"
			],
			[
				"wi",
				"width"
			],
			[
				"rel",
				"relheight"
			],
			[
				"pa",
				"pady"
			],
			[
				"bu",
				"Button"
			],
			[
				"w",
				"width"
			],
			[
				"de",
				"destroy"
			],
			[
				"se",
				"search_window"
			],
			[
				"re",
				"relheight"
			],
			[
				"p",
				"place"
			],
			[
				"s",
				"serch"
			],
			[
				"no",
				"no1"
			],
			[
				"sea",
				"search_Frame"
			],
			[
				"def",
				"defs\tMethod"
			],
			[
				"songL",
				"song_length"
			],
			[
				"sont",
				"song_length"
			],
			[
				"ta",
				"track_slide"
			],
			[
				"ex",
				"except"
			],
			[
				"ti",
				"time_form_len"
			],
			[
				"song_",
				"song_length"
			],
			[
				"time",
				"time_form"
			],
			[
				"im",
				"import"
			],
			[
				"te",
				"tempTime"
			],
			[
				"son",
				"songTime"
			],
			[
				"Bom",
				"BOTTOMBAR"
			],
			[
				"cove",
				"coverFRame"
			],
			[
				"Le",
				"LEFT"
			],
			[
				"slider",
				"sliderFrame"
			],
			[
				"vol",
				"volScliderFrame"
			],
			[
				"get",
				"get_pos\tfunction ⟠"
			],
			[
				"d",
				"dir(…)\tfunction ⟠"
			],
			[
				"el",
				"else"
			],
			[
				"vo",
				"volCon"
			],
			[
				"vl",
				"fullVol"
			],
			[
				"sc",
				"scale"
			],
			[
				"bott",
				"BOTTOMBAR"
			],
			[
				"pl",
				"playerFrame"
			],
			[
				"v",
				"volScliderFrame"
			],
			[
				"Sc",
				"Scale"
			],
			[
				"a",
				"activeforeground"
			],
			[
				"b",
				"bg"
			],
			[
				"al",
				"albumIcon"
			],
			[
				"Al",
				"albums"
			],
			[
				"la",
				"Label"
			],
			[
				"tr",
				"try\tTry/Except"
			],
			[
				"cre",
				"create"
			],
			[
				"di",
				"dirPath\t⟠"
			],
			[
				"fi",
				"filedialog"
			],
			[
				"ask",
				"askdirectory(…)\tfunction ⟠"
			],
			[
				"f",
				"filedialog"
			],
			[
				"but",
				"Buttons"
			],
			[
				"rl",
				"relwidth"
			],
			[
				"sett",
				"settingWin"
			],
			[
				"Setting",
				"Settings"
			],
			[
				"M",
				"MusicList"
			],
			[
				"mu",
				"musicList\tfunction ⟠"
			],
			[
				"print",
				"print(b\t★ pro ⟠"
			],
			[
				"fra",
				"Frame"
			],
			[
				"bo",
				"borderwidth"
			],
			[
				"st",
				"style"
			],
			[
				"play",
				"playerFrame"
			],
			[
				"sn",
				"songNameToEdit"
			],
			[
				"pla",
				"playingVar"
			],
			[
				"ne",
				"playNext"
			],
			[
				"playin",
				"playingVar"
			],
			[
				"ima",
				"image"
			],
			[
				"song",
				"songNo"
			],
			[
				"midel",
				"middleBtnFunc"
			],
			[
				"Mu",
				"MusicList"
			],
			[
				"fro",
				"for\tFor Loop"
			],
			[
				"ge",
				"getSongName(no)\t★ pro ⟠"
			],
			[
				"S",
				"SongName"
			],
			[
				"cr",
				"createDataBase\tfunction ⟠"
			],
			[
				"g",
				"getSongName"
			],
			[
				"music",
				"musicFind\tmodule ⟠"
			],
			[
				"fr",
				"frame\t★ pro ⟠"
			],
			[
				"C",
				"configure"
			],
			[
				"scr",
				"Scrollbar"
			],
			[
				"py",
				"pygame\tmodule ⟠"
			],
			[
				"mi",
				"mixer"
			],
			[
				"midle",
				"middleBtnClick"
			],
			[
				"Te",
				"True"
			],
			[
				"ma",
				"master"
			],
			[
				"colu",
				"column=int\tkeyword ⟠"
			],
			[
				"asse",
				"assets\t★ pro ⟠"
			],
			[
				"muis",
				"MusicDataBase"
			],
			[
				"so",
				"Sound(self\t★ pro ⟠"
			],
			[
				"fu",
				"fullViwe"
			],
			[
				"Cla",
				"cancelBtn"
			],
			[
				"ful",
				"fullListWindow"
			],
			[
				"N",
				"NowPlaying"
			],
			[
				"now",
				"NowPlaying"
			],
			[
				"window",
				"windowSub"
			],
			[
				"mus",
				"MusicDataBase\ttype ⟠"
			],
			[
				"tra",
				"track_info\t⟠"
			],
			[
				"if",
				"if\tIf Condition"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"A",
				"append"
			],
			[
				"ret",
				"return"
			],
			[
				"c",
				"cor\t⟠"
			],
			[
				"da",
				"database\t★ pro ⟠"
			],
			[
				"sql",
				"sqlite3\tmodule ⟠"
			],
			[
				"pri",
				"print('unknown')\t★ pro ⟠"
			],
			[
				"e",
				"else:\tkeyword ⟠"
			],
			[
				"i",
				"if\tIf Condition"
			],
			[
				"fo",
				"for i\t★ pro ⟠"
			],
			[
				"ar",
				"artist\t★ pro ⟠"
			],
			[
				"lo",
				"load\t★ ⟠"
			],
			[
				"mp",
				"mp3\t★ ⟠"
			],
			[
				"mb",
				"middlekBtn"
			],
			[
				"next",
				"nextBt\t★ ⟠"
			],
			[
				"secon",
				"secondFrameCon\t★ ⟠"
			],
			[
				"place",
				"place(relwidth\t★ ⟠"
			],
			[
				"Bo",
				"bottomBar"
			],
			[
				"tk",
				"_tkinter〔module〕"
			],
			[
				"tkin",
				"_tkinter〔module〕"
			],
			[
				"Tk",
				"Tkinter〔module〕"
			],
			[
				"co",
				"config〔function〕"
			],
			[
				"sb",
				"StringBuffer"
			],
			[
				"Strin",
				"StringBuffer"
			],
			[
				"Cl",
				"Class"
			],
			[
				"ch",
				"Chapter17_2"
			],
			[
				"cha",
				"Chapter17_2"
			],
			[
				"Cha",
				"Chapter17_1"
			],
			[
				"cal",
				"class"
			],
			[
				"n",
				"noise"
			],
			[
				"inter",
				"interface"
			],
			[
				"Ca",
				"Chapter15"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from tkinter import *\nfrom tkinter import filedialog\nimport recent as r\nfrom tkinter import ttk\nimport musicFind as mm\nimport searchWin as s\nimport nowPlaying as np\n\nBOTTOMBAR=\"#051C2A\"\nBOTTOMBARBRIGHT=\"#0B3F5E\"\n\nclass GroveMusic():\n\t# initialize root window \n\tdef __init__(self):\n\t\tself.window = Tk()\n\t\tself.cliked = True\n\t\tself.songNameToEdit=\"\"\n\t\tself.middleBtnClick = True\n\t\tself.songNo = 0\n\t\tself.window.title(\"Grove Music\")\n\t\tself.window.geometry(\"800x650+270+60\")\n\t\tself.window.wm_overrideredirect(True)\n\n\t\tself.window.resizable(False,False)\n\t\tself.starting()\n\t\tself.window.mainloop()\n\n\t# --------------------------Looding Icon - Blue Frame---------------------------------\n\tdef starting(self):\n\t\tself.GroveIcon = PhotoImage(file = \"asset/Grove.png\")\n\t\tself.blueFrame = Frame(self.window,bg=\"#0090FF\")\n\t\tself.Icon = Label(self.blueFrame,image = self.GroveIcon,bg=\"#0090FF\")\n\t\tself.Icon.place(relheight=1,relwidth=1)\n\t\tself.blueFrame.place(relheight=1,relwidth=1)\n\t\tself.blueFrame.after(2000,self.deleteFrame)\n\n\t# ------------------------- delete loading frame ----------------------------------\n\tdef deleteFrame(self):\n\t\tself.window.geometry(\"800x620+270+60\")\n\t\tself.window.wm_overrideredirect(False)\n\t\tself.blueFrame.destroy()\n\t\tself.mainWindow()\n\n\t# ------------------------ create functionnig window --------------------------------\n\tdef mainWindow(self):\n\t\tself.windowSub = Frame(self.window)\n\t\tself.windowSub.place(relwidth=1,relheight=1)\n\t\tself.height = 0.83\n\t\tself.width = 0.06\n\t\tself.bar = Frame(self.windowSub,bg=\"#313131\")\n\t\tself.barFunc()\n\t\tself.bar.place(relheight=0.83,relwidth=self.width)\n\n\t\tself.listFrame = Frame(self.windowSub,bg=\"black\")\n\t\tself.MusicList = Frame(self.listFrame,bg=\"black\")\n\t\tself.MusicLiveWindow(self.MusicList)\n\t\tself.MusicList.place(relheight=1,relwidth=1)\n\t\tself.listFrame.place(relheight = self.height,relwidth = (1-self.width),relx = self.width)\n\n\t\tself.playerFrame = Frame(self.windowSub,bg = \"#005099\")\n\t\t# bb.BottomBar(self.playerFrame)\n\t\tself.bottomBar()\n\t\tself.playerFrame.place(relheight = (1-self.height),relwidth = 1,rely = self.height)\n\n\t# ------------------------- Right bar creation -------------------------------------\n\tdef barFunc(self):\n\t\t# full viwe button\n\t\tself.line = PhotoImage(file=\"asset/lines.png\")\n\t\tself.fullViweBtn = Button(self.bar, bg = \"#313131\",activebackground=\"#626262\",text = \"=\",activeforeground=\"#fff\",borderwidth=0, command = self.resizeViwe,image = self.line)\n\t\tself.fullViweBtn.place(rely = 0.1, relwidth = 1,relheight=0.09)\n\t\t# -------------------------------------------------- Arrow Icon --------------------------------------------------------------\n\t\tself.arrowIcon = PhotoImage(file=\"asset/Arrow.png\")\n\t\tself.arrowFrame = Frame(self.bar,bg=\"#313131\")\n\t\t# Search button\n\t\tself.arrow = Button(self.arrowFrame,image=self.arrowIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0)\n\t\tself.arrow.grid(row = 0 ,column =0)\n\t\t# serch input\n\t\tself.Grove = Label(self.arrowFrame,bg=\"#313131\",font=\"arial 12 \",bd=0,text=\"Groove music                                            \",fg=\"#fff\",pady=7)\n\t\tself.Grove.grid(row=0,column=1)\n\t\tself.arrowFrame.place(rely=0.01,relwidth=1,relheight=0.09)\n\t\t# --------------------------------------------------------------------------------------------------------------------------------\n\t\t#------------------------------------------- Search Frame----------------------------------------------------------------\n\t\tself.searchIcon = PhotoImage(file = \"asset/search.png\")\n\t\tself.searchIconDark = PhotoImage(file = \"asset/searchP.png\")\n\t\tself.searchFrame = Frame(self.bar,bg=\"#212121\")\n\t\t# Search button\n\t\tself.searchBtn = Button(self.searchFrame,image=self.searchIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0,command = self.resizeViwe)\n\t\tself.searchBtn.grid(row = 0 ,column =0)\n\t\t# serch input\n\t\tself.entry = Entry(self.searchFrame,bg=\"#212121\",width=28,font=\"arial 12\",bd=0,fg=\"#fff\",)\n\t\tself.entry.grid(row=0,column=1)\n\t\tself.searchFrame.place(rely=0.2,relwidth=1,relheight=0.08)\n\t\t# -------------------------------------------------------------------------------------------------------------------------\n\t\t# -------------------------------------------------- music Icon --------------------------------------------------------------\n\t\tself.musicIcon = PhotoImage(file=\"asset/music.png\")\n\t\tself.musicFrame = Frame(self.bar,bg=\"#313131\")\n\t\t# Search button\n\t\tself.musicBtn = Button(self.musicFrame,image=self.musicIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0,command=self.musicFunc)\n\t\tself.musicBtn.grid(row = 0 ,column =0)\n\t\t# serch input\n\t\tself.muMusic = Button(self.musicFrame,bg=\"#313131\",font=\"arial 12 \",bd=0,text=\"My music                                              \",fg=\"#fff\",activebackground=\"#626262\",activeforeground=\"#fff\",command=self.musicFunc)\n\t\tself.muMusic.grid(row=0,column=1)\n\t\tself.musicFrame.place(rely=0.3,relwidth=1,relheight=0.09)\n\t\t# -----------------------------------------------------------------------------------------------------------------------------\n\t\t# -------------------------------------------------- recent Icon --------------------------------------------------------------\n\t\tself.recentIcon = PhotoImage(file=\"asset/resent.png\")\n\t\tself.recentFrame = Frame(self.bar,bg=\"#313131\")\n\t\t# Search button\n\t\tself.recentBtn = Button(self.recentFrame,image=self.recentIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0,command=self.recent)\n\t\tself.recentBtn.grid(row = 0 ,column =0)\n\t\t# serch input\n\t\tself.recent = Button(self.recentFrame,bg=\"#313131\",font=\"arial 12 \",bd=0,text=\"Recent playes                                      \",fg=\"#fff\",activebackground=\"#626262\",activeforeground=\"#fff\",pady=7,command=self.recent)\n\t\tself.recent.grid(row=0,column=1)\n\t\tself.recentFrame.place(rely=0.4,relwidth=1,relheight=0.09)\n\t\t# -----------------------------------------------------------------------------------------------------------------------------\n\t\t# -----------------------------------------------------partition------------------------------------\n\t\tself.partitionFrame1 = Frame(self.bar,bg=\"#fff\")\n\t\tself.partitionFrame1.place()\n\t\t# -------------------------------------------------------------------------------------------------\n\t\t# ------------------------------------------- Now Playing -------------------------------------------\n\t\tself.playingIcon = PhotoImage(file=\"asset/NowPlaying.png\")\n\t\tself.playingFrame = Frame(self.bar,bg=\"#313131\")\n\t\t# Search button\n\t\tself.playingBtn = Button(self.playingFrame,image=self.playingIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0,command=self.NowPlayingFunc)\n\t\tself.playingBtn.grid(row = 0 ,column =0)\n\t\t# serch input\n\t\tself.playing = Button(self.playingFrame,bg=\"#313131\",font=\"arial 12 \",bd=0,text=\"Now playing                                       \",fg=\"#fff\",activebackground=\"#626262\",activeforeground=\"#fff\",pady=7,command=self.NowPlayingFunc)\n\t\tself.playing.grid(row=0,column=1)\n\t\tself.playingFrame.place(rely=0.51,relwidth=1,relheight=0.09)\n\t\t# -----------------------------------------------------------------------------------------------------\n\t\t# -----------------------------------------------------partition------------------------------------\n\t\tself.partitionFrame = Frame(self.bar,bg=\"#fff\")\n\t\tself.partitionFrame.place()\n\t\t# -------------------------------------------------------------------------------------------------\n\t\t# -------------------------------------------------- Setting Icon --------------------------------------------------------------\n\t\tself.settingIcon = PhotoImage(file=\"asset/setting.png\")\n\t\tself.settingFrame = Frame(self.bar,bg=\"#313131\")\n\t\t# setting button\n\t\tself.settingBtn = Button(self.settingFrame,image=self.settingIcon,width=47,bg = \"#313131\",activebackground=\"#626262\",height=44,activeforeground=\"#fff\",borderwidth=0,command=self.settingsBtnFunc)\n\t\tself.settingBtn.grid(row = 0 ,column =0)\n\t\t# seting input\n\t\tself.settings = Button(self.settingFrame,bg=\"#313131\",font=\"arial 12 \",bd=0,text=\"Settings                                              \",fg=\"#fff\",activebackground=\"#626262\",activeforeground=\"#fff\",pady=7,command=self.settingsBtnFunc)\n\t\tself.settings.grid(row=0,column=1)\n\t\tself.settingFrame.place(rely=0.9,relwidth=1,relheight=0.09)\n\t\t# ----------------------------------------------------------------------------------------------------------------------------\n\t\n\t# ----------------------------- Bottom Player Bar -----------------------------------\n\tdef bottomBar(self):\n\t\tself.pause = PhotoImage(file = \"asset/pause.png\")\n\t\tself.play = PhotoImage(file = \"asset/play.png\")\n\t\tself.scaleIcon = PhotoImage(file = \"asset/scale.png\")\n\t\tself.albumIcon = PhotoImage(file = \"asset/album.png\")\n\t\tself.backBtnIcon = PhotoImage(file = \"asset/back.png\")\n\t\tself.nextBtnIcon = PhotoImage(file = \"asset/next.png\")\n\t\tself.fullVol = PhotoImage(file = \"asset/volFull.png\")\n\t\tself.songImage = Button(self.playerFrame,image=self.albumIcon,bg=\"#333\",activebackground=\"#444\",bd=0)\n\t\tself.songImage.place(relheight=1,relwidth=0.12)\n\t\tself.songName  = Button(self.playerFrame,text=self.songNameToEdit,activebackground=BOTTOMBARBRIGHT,activeforeground=\"#eee\",borderwidth=0,bg=BOTTOMBAR,fg=\"#ccc\",anchor='w',font=\"12\")\n\t\tself.songName.place(relwidth=0.2,relheight=1,relx=0.12)\n\t\tself.backBtn = Button(self.playerFrame,text=\"backBtn\",image=self.backBtnIcon,activebackground=BOTTOMBAR,activeforeground=BOTTOMBAR,borderwidth=0,bg=BOTTOMBAR,command=self.playBack,anchor=\"e\")\n\t\tself.backBtn.place(relheight=0.6,relwidth=0.1,relx=0.32)\n\t\tself.middleBtn = Button(self.playerFrame,image=self.play,activebackground=BOTTOMBAR,bg=BOTTOMBAR,activeforeground=BOTTOMBAR,borderwidth=0,command=self.middleBtnFunc)\n\t\tself.middleBtn.place(relheight=0.6,relwidth=0.12,relx=0.42)\n\t\tself.nextBtn = Button(self.playerFrame,image=self.nextBtnIcon,activebackground=BOTTOMBAR,activeforeground=BOTTOMBAR,borderwidth=0,bg=BOTTOMBAR,command=self.playNext,anchor=\"w\")\n\t\tself.nextBtn.place(relheight=0.6,relwidth=0.1,relx=0.54)\n\t\tself.sliderFrame = Frame(self.playerFrame,bg=BOTTOMBAR)\n\t\tself.songSlider = Scale(self.sliderFrame, from_=0, to=100, orient=HORIZONTAL,bg=\"#0090aa\",borderwidth=0,highlightthickness=0,sliderrelief=FLAT,troughcolor=\"#777\",fg=BOTTOMBAR,width=8,length=180,highlightcolor=\"#0090ff\").pack()\n\t\tself.coverFRame=Frame(self.sliderFrame,bg=BOTTOMBAR).place(relwidth=1,relheight=0.442)\n\t\tself.sliderFrame.place(relx=0.32,relwidth=0.32,relheight=0.4,rely=0.6)\n\t\tself.volBtn = Button(self.playerFrame,image=self.fullVol,activebackground=BOTTOMBAR,activeforeground=BOTTOMBAR,borderwidth=0,bg=BOTTOMBAR,anchor=\"e\").place(relheight=0.6,relwidth=0.1,relx=0.64)\n\t\tself.volScliderFrame = Frame(self.playerFrame,bg=BOTTOMBAR)\n\t\tself.volScal = Scale(self.volScliderFrame, from_=0, to=100, orient=HORIZONTAL,bg=\"#0090aa\",borderwidth=0,highlightthickness=0,sliderrelief=FLAT,troughcolor=\"#777\",fg=BOTTOMBAR,width=8,length=125,highlightcolor=\"#0090ff\").pack(pady=7)\n\t\tself.coverframe = Frame(self.volScliderFrame,bg=BOTTOMBAR).place(relwidth=1,relheight=0.45)\n\t\tself.volScliderFrame.place(relheight=0.6,relwidth=0.17,relx=0.74)\n\t\tself.scaleWindow = Button(self.playerFrame,image=self.scaleIcon,activebackground=BOTTOMBAR,activeforeground=BOTTOMBAR,borderwidth=0,bg=BOTTOMBAR,).place(relheight=0.6,relwidth=0.09,relx=0.91)\n\t\tself.bottomCorner = Frame(self.playerFrame,bg=BOTTOMBAR).place(rely=0.6,relheight=0.4,relwidth=0.36,relx=0.64)\n\t# ---------------------------- Rightbar Bar Scalling -------------------------------\n\tdef resizeViwe(self):\n\t\tif self.cliked:\n\t\t\tfor i in range(6,401):\n\t\t\t\tself.width = i/1000\n\t\t\t\tself.bar.place_configure(relwidth = self.width)\n\t\t\t\tself.listFrame.place_configure(relheight = self.height,relwidth = (1-self.width),relx = self.width)\n\t\t\t\tself.cliked = False\n\t\t\tself.fullViwe()\n\t\t\tself.searchBtn.configure(command= self.searchFunc)\n\t\t\tprint(self.width)\n\t\telse :\n\t\t\tfor i in range(0,341):\n\t\t\t\tself.width = (400-i)/1000\n\t\t\t\tself.bar.place_configure(relwidth = self.width)\n\t\t\t\tself.listFrame.place_configure(relheight = self.height,relwidth = (1-self.width),relx = self.width)\n\t\t\t\tself.cliked = True\n\t\t\tself.searchBtn.configure(command= self.resizeViwe)\n\t\t\tself.smallViwe()\n\t\t\tprint(self.width)\n\n\t# ------------------------- Right Bar miximized (function) --------------------------\n\tdef fullViwe(self):\n\t\tself.fullViweBtn.place_configure(relwidth=0.15)\n\t\tself.searchFrame.place_configure(relwidth=0.94,relx=0.03)\n\t\tself.searchBtn.configure(bg = \"#212121\",activebackground=\"#FFF\",activeforeground=\"#AAA\",image = self.searchIconDark)\n\t\tself.entry.grid_configure(row = 0 ,column=0)\n\t\tself.partitionFrame.place_configure(relx=0.05,rely=0.89,relheight = 0.001,relwidth=0.9)\n\t\tself.partitionFrame1.place_configure(relx=0.05,rely=0.5,relheight = 0.001,relwidth=0.9)\n\t\tself.searchBtn.grid_configure(row = 0 ,column=1)\n\n\t#-------------------------- Right Bar minimized (function) ---------------------------\n\tdef smallViwe(self):\n\t\tself.searchFrame.place_configure(relwidth=1,relx=0)\n\t\tself.fullViweBtn.place_configure(relwidth=1)\n\t\tself.searchBtn.configure(image=self.searchIcon,bg = \"#313131\",activebackground=\"#626262\",activeforeground=\"#fff\")\n\t\tself.entry.grid_configure(row = 0 ,column=1)\n\t\tself.partitionFrame.place_configure(relx=0.,rely=1,relheight= 0,relwidth=0)\n\t\tself.partitionFrame1.place_configure(relx=0.,rely=1,relheight= 0,relwidth=0)\n\t\tself.searchBtn.grid_configure(row = 0 ,column=0)\n\n\t# -------------------------------- Searching Window --------------------------------\n\tdef searchFunc(self):\n\t\tself.MusicList.destroy()\n\t\tself.MusicList = Frame(self.listFrame,bg=\"black\")\n\t\ts.SearchWin(self.MusicList)\n\t\tself.MusicList.place(relheight=1,relwidth=1)\n\n\t# --------------------------- music List window creation ---------------------------\n\tdef musicFunc(self):\n\t\tself.MusicList.destroy()\n\t\tself.MusicList = Frame(self.listFrame,bg=\"black\")\n\t\tself.MusicLiveWindow(self.MusicList)\n\t\tself.MusicList.place(relheight=1,relwidth=1)\n\n\t# recent window creation\n\tdef recent(self):\n\t\tself.MusicList.destroy()\n\t\tself.MusicList = Frame(self.listFrame,bg=\"black\")\n\t\tr.RecentWin(self.MusicList)\n\t\tself.MusicList.place(relheight=1,relwidth=1)\n\n\t#  ------------------------------ Midlebutton function ------------------------------\n\tdef middleBtnFunc(self):\n\t\tif self.middleBtnClick == True :\n\t\t\tself.middleBtn.configure(image=self.pause)\n\t\t\tself.middleBtnClick = False\n\t\t\tself.mf.unPause()\n\t\telse:\n\t\t\tself.middleBtn.configure(image=self.play)\n\t\t\tself.middleBtnClick = True\n\t\t\tself.mf.pause()\n\n\t# ----------------------------- Now playing window --------------------------------\n\tdef NowPlayingFunc(self):\n\t\tself.windowSub.destroy()\n\t\tself.fullListWindow = Frame(self.window,bg=\"red\")\n\t\tself.fullListWindow.place(relheight=1,relwidth=1)\n\t\tself.cancelBtn = Button(self.window,text=\"click Me !\",command=self.cancelBtnFunc)\n\t\tself.cancelBtn.place(relx=0)\n\t\tnp.NowPlaying(self.fullListWindow)\n\t\n\t# ---------------------------- Back To Main Window ----------------------------\n\tdef cancelBtnFunc(self):\n\t\tself.fullListWindow.destroy()\n\t\tself.cancelBtn.destroy()\n\t\tself.mainWindow()\n\t\n\t# ------------------------------- Music list window ----------------------------\n\tdef MusicLiveWindow(self,windowS):\n\t\tself.mf = mm.MusicDataBase()\n\t\tself.baseListFrame = windowS\n\t\tself.musicListWindow = Frame(self.baseListFrame,bg=\"#000\")\n\t\tself.header()\n\t\tself.musicListWindow.place(relheight=1,relwidth=1)\n\n\t# ----------------------- Heading of Music List Window -------------------------\n\tdef header(self):\n\t\tself.myMusicL =Label(self.musicListWindow,text=\"My Music\",fg=\"#fff\",font =\"arial 22 \",pady=0,bg=\"#000\")\n\t\tself.myMusicL.place(relheight=0.08,relwidth=0.2,relx=0,rely=0.08)\n\n\t\tself.btnFrame = Frame(self.musicListWindow,bg=\"#000\")\n\t\tself.headerBtn()\n\t\tself.btnFrame.place(relheight=0.06,relwidth=0.9,relx=0.05,rely=0.18)\n\n\t\tself.blueLine = Frame(self.musicListWindow,bg=\"#0090aa\")\n\t\tself.blueLine.place(relheight=0.01,relwidth=0.1,relx=0.05,rely=0.245)\n\n\t\tself.linePartition = Frame(self.musicListWindow,bg=\"#fff\")\n\t\tself.linePartition.place(relheight=0.0001,relwidth=0.9,relx=0.05,rely=0.25)\n\n\t\tself.songListFrame = Frame(self.musicListWindow,bg=\"#000\")\n\t\tself.musicList()\n\t\tself.songListFrame.place(relheight=0.7,relwidth=0.94,relx=0.03,rely=0.27)\n\n\t# ------------------- Buttons in Heading of Music List Window -------------------\n\tdef headerBtn(self):\n\t\tself.songsBtn = Button(self.btnFrame,text=\"Songs\",font =\"arial 15 bold\",fg=\"#aaa\",bg=\"#000\",activebackground=\"#222\",activeforeground=\"#fff\",borderwidth=0,command = self.songsBtnFunc)\n\t\tself.songsBtn.grid(row =0 ,column =0)\n\t\tself.space1 = Label(self.btnFrame,text = \"         \",bg=\"#000\")\n\t\tself.space1.grid(row =0 ,column =1)\n\n\t\tself.artistBtn = Button(self.btnFrame,text=\"Artists\",font =\"arial 15 bold\",fg=\"#aaa\",bg=\"#000\",activebackground=\"#222\",activeforeground=\"#fff\",borderwidth=0,command = self.artistBtnFunc)\n\t\tself.artistBtn.grid(row =0 ,column =2)\n\t\tself.space2 = Label(self.btnFrame,text = \"         \",bg=\"#000\")\n\t\tself.space2.grid(row =0 ,column =3)\n\n\t\tself.albumsBtn = Button(self.btnFrame,text=\"Albums\",font =\"arial 15 bold\",fg=\"#aaa\",bg=\"#000\",activebackground=\"#222\",activeforeground=\"#fff\",borderwidth=0,command = self.albumsBtnFunc)\n\t\tself.albumsBtn.grid(row =0 ,column =4)\n\n\tdef songsBtnFunc(self):\n\t\tself.blueLine.place_configure(relx=0.05)\n\n\tdef artistBtnFunc(self):\n\t\tself.blueLine.place_configure(relx=0.193)\n\n\tdef albumsBtnFunc(self):\n\t\tself.blueLine.place_configure(relx=0.34)\n\n\tdef playSong(self,x):\n\t\tself.playMusic(x+1)\n\t\tself.playingVar=True\n\n\tdef playNext(self):\n\t\tself.songNo+=1\n\t\tself.playMusic(self.songNo)\n\n\tdef playBack(self):\n\t\tself.songNo-=1\n\t\tself.playMusic(self.songNo)\n\n\n\tdef settingsBtnFunc(self):\n\t\tself.MusicList.destroy()\n\t\tself.MusicList = Frame(self.listFrame,bg=\"black\")\n\t\tself.settingWindow()\n\t\tself.MusicList.place(relheight=1,relwidth=1)\n\n\tdef settingWindow(self):\n\t\tsettingLabel = Label(self.MusicList,text = \"Settings\",font=\"arial 25 \",bg=\"#000\",fg=\"#fff\",anchor=\"w\").place(rely = 0.1,relwidth=0.3,relheight=0.1,relx=0.05)\n\t\tsettingMusic = Label(self.MusicList,text = \"Music on this PC \",font=\"arial 17 \",bg=\"#000\",fg=\"#fff\",anchor=\"nw\").place(rely = 0.2,relwidth=0.3,relheight=0.1,relx=0.05)\n\t\tsettingMusicBtn = Button(self.MusicList,text = \"Chose where we look for music\",bg=\"#000\",fg=\"#0080bb\",activeforeground=\"#fff\",activebackground=\"#000\",anchor=\"nw\",font=\"14\",bd=0,command=self.getMusicDir).place(rely = 0.27,relwidth=0.3,relheight=0.1,relx=0.05)\n\t\tsettingMusicBtn = Label(self.MusicList,text = \"Reset location where to look for\",bg=\"#000\",fg=\"#fff\",anchor=\"nw\",font=\"16\",bd=0,).place(rely = 0.33,relwidth=0.3,relheight=0.1,relx=0.05)\n\t\tsettingMusicBtn = Button(self.MusicList,text = \"Reset\",bg=\"#000\",fg=\"#0080bb\",activeforeground=\"#fff\",activebackground=\"#000\",anchor=\"nw\",font=\"14\",bd=0,command=self.deleteDb).place(rely = 0.37,relwidth=0.3,relheight=0.1,relx=0.05)\n\t\n\tdef getMusicDir(self):\n\t\ttry:\n\t\t\tself.mf.createDataBase()\n\t\texcept :\n\t\t\tpass\n\t\tgetDir = filedialog.askdirectory()\n\t\tself.mf.detection(getDir)\n\n\tdef deleteDb(self):\n\t\tself.mf.delete_table()\n\t# ---------------------------- Creting buttons in List window ----------------------\n\tdef musicList(self):\n\t\tmy_canvas =  Canvas(self.songListFrame,bg=\"#000\")\n\t\tmy_canvas.pack(fill=BOTH,expand=1,side=LEFT)\n\t\tmy_Scroll = ttk.Scrollbar(self.songListFrame,orient=VERTICAL,command = my_canvas.yview,)\n\t\tmy_Scroll.pack(side= RIGHT,fill=Y)\n\t\tmy_canvas.configure(yscrollcommand=my_Scroll.set)\n\t\tmy_canvas.bind('<Configure>', lambda e : my_canvas.configure(scrollregion = my_canvas.bbox(\"all\")))\n\t\tself.secondFrame = Frame(my_canvas)\n\t\tmy_canvas.create_window((0,0),window = self.secondFrame ,anchor=\"nw\")\n\t\timages = PhotoImage(file = 'asset/searchP.png')\n\t\tfor j in self.mf.getLength():\n\t\t\tfor i in range(j[0]):\n\t\t\t\tc=self.mf.getSongName(i+1)\n\t\t\t\tprint(c)\n\t\t\t\tif i%2 != 0:\n\t\t\t\t\tplay = Button(self.secondFrame,text=\"▶\",bg=\"#000\",fg=\"#aaa\",borderwidth=0,font=\"15\",activeforeground=\"#fff\",activebackground=\"#333\",height=2,width=5,command = lambda x = i : self.playSong(x)).grid(row=i,column=0)\n\t\t\t\t\tsongName = Button(self.secondFrame,text=c[0][0],height=2,width=38,anchor=\"w\",bg=\"#000\",fg=\"#aaa\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=1)\n\t\t\t\t\tartist = Button(self.secondFrame,text=c[0][1],height=2,width=16,bg=\"#000\",fg=\"#aaa\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=2)\n\t\t\t\t\talbums = Button(self.secondFrame,text=c[0][2],height=2,width=16,bg=\"#000\",fg=\"#aaa\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=3)\n\t\t\t\telse:   \n\t\t\t\t\tplay = Button(self.secondFrame,text=\"▶\",bg=\"#444\",fg=\"#ccc\",borderwidth=0,font=\"15\",activeforeground=\"#fff\",activebackground=\"#333\",height=2,width=5,command = lambda x = i : self.playSong(x)).grid(row=i,column=0)\n\t\t\t\t\tsongName = Button(self.secondFrame,text=c[0][0],height=2,width=38,anchor=\"w\",bg=\"#444\",fg=\"#ccc\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=1)\n\t\t\t\t\tartist = Button(self.secondFrame,text=c[0][1],height=2,width=16,bg=\"#444\",fg=\"#ccc\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=2)\n\t\t\t\t\talbums = Button(self.secondFrame,text=c[0][2],height=2,width=16,bg=\"#444\",fg=\"#ccc\",borderwidth=0,font=\"12\",activeforeground=\"#fff\",activebackground=\"#333\",command = lambda x = i : self.playSong(x)).grid(row=i,column=3)\n\n\t# play Main fun\n\tdef playMusic(self,y):\n\t\tself.songNo=y\n\t\ttemp = self.mf.getSongName(self.songNo)\n\t\tself.songNameToEdit = temp[0][0]\n\t\tself.songName.configure(text=self.songNameToEdit)\n\t\tc=self.mf.getPath(self.songNo)\n\t\tpath=c[0][0]+\"\\\\\"+c[0][1]+c[0][2]\n\t\tself.middleBtnClick = True\n\t\tself.mf.playFile(path)\n\t\tself.middleBtnFunc()\n\n\nif __name__ == \"__main__\":\n\tGroveMusic()\n\t",
			"file": "GroveMusic.py",
			"file_size": 22642,
			"file_write_time": 132492985658355654,
			"settings":
			{
				"buffer_size": 22246,
				"line_ending": "Windows"
			}
		},
		{
			"file": "musicFind.py",
			"settings":
			{
				"buffer_size": 2528,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Dart/Support/Dart.sublime-build",
					""
				],
				[
					"Packages/Dart/Support/Dart.sublime-build",
					"Dart: pub build"
				],
				[
					"Packages/Dart/Support/Dart.sublime-build",
					"Dart: dart2js"
				]
			],
			[
				"Packages/Dart/Support/Dart.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Java/Ant.sublime-build",
					""
				],
				[
					"Packages/Java/JavaC.sublime-build",
					""
				]
			],
			[
				"Packages/Java/JavaC.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/dart-sublime-bundle-master/Support/Dart.sublime-build",
					""
				],
				[
					"Packages/dart-sublime-bundle-master/Support/Dart.sublime-build",
					"Dart: pub build"
				],
				[
					"Packages/dart-sublime-bundle-master/Support/Dart.sublime-build",
					"Dart: dart2js"
				]
			],
			[
				"Packages/dart-sublime-bundle-master/Support/Dart.sublime-build",
				"Dart: pub build"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packe",
				"Package Control: Install Package"
			],
			[
				"vis",
				"VSCode: Open in Visual Studio Code"
			],
			[
				"open v",
				"VSCode: Open in Visual Studio Code"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"EXIT",
				"Set Syntax: Textile"
			],
			[
				"term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"paka dia",
				"Package Control: Disable Package"
			],
			[
				"ki",
				"Kite: Start Engine"
			],
			[
				"sisable",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"diss",
				"Package Control: Discover Packages"
			],
			[
				"pythn",
				"Set Syntax: Python"
			],
			[
				"git com",
				"Set Syntax: Git Commit"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"intre",
				"SublimeCodeIntel: Reset"
			],
			[
				"Package Control: d",
				"Package Control: Disable Package"
			],
			[
				"dias",
				"Package Control: Disable Package"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"instlal ",
				"Package Control: Install Package"
			],
			[
				"pak",
				"Package Control: Install Package"
			],
			[
				"paka",
				"Package Control: Enable Package"
			],
			[
				"thrme",
				"Terminus Utilities: Select Theme"
			],
			[
				"instll",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Amend Commit"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"package e",
				"Package Control: Enable Package"
			],
			[
				"dart",
				"Dart: Check Configuration"
			],
			[
				"dart con",
				"Dart: Check Configuration"
			],
			[
				"key ",
				"Preferences: Key Bindings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"dia",
				"Package Control: Disable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				" dart use",
				"Preferences: Dart Settings - User"
			],
			[
				"snipper",
				"Snippet: Library"
			],
			[
				"pa",
				"Package Control: Disable Package"
			],
			[
				"setting",
				"Preferences: Dart Settings - User"
			],
			[
				"darr",
				"Dart: Serve Documentation"
			],
			[
				"darrt",
				"Preferences: Dart Settings - User"
			],
			[
				"contr",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"plugin",
				"Plugin Development: Convert Syntax to .sublime-syntax"
			],
			[
				"them",
				"UI: Select Color Scheme"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"Snippet: ",
				"Snippet: If Condition"
			],
			[
				"key",
				"Preferences: Terminus Key Bindings"
			],
			[
				"exit",
				"Set Syntax: Textile"
			],
			[
				"th",
				"UI: Select Theme"
			],
			[
				"termin",
				"Terminus Utilities: Select Theme"
			],
			[
				"ter",
				"Terminus Utilities: Generate User Theme"
			],
			[
				"",
				":0 - BOF"
			],
			[
				"KE",
				"Preferences: Key Bindings"
			],
			[
				"TER",
				"Preferences: Terminus Command Palette"
			],
			[
				"TR",
				"Terminus: List Shells"
			],
			[
				"insata",
				"Package Control: Install Package"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"termi",
				"Preferences: Terminus Key Bindings"
			],
			[
				"tem",
				"Terminus Utilities: Select Theme"
			],
			[
				"te",
				"Preferences: Terminus Key Bindings"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"me",
				"View: Toggle Menu"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 623.0,
		"history":
		[
			"os.py",
			"impor django",
			"print(';adasd')",
			"print(;adasd)",
			"print",
			"exit",
			"from tkinter import *",
			"import os",
			"import tk",
			"import yk",
			"a",
			"ad",
			"d",
			"ada",
			"ad",
			"a",
			"ad",
			"dada",
			"papdadpapapapsppaapdadadpadapdadpadapdadadadadpapdadpadpdapadpaapdpdpadapdapdadpadapdapddpa",
			".",
			"help",
			"exit()",
			"exit",
			"-v",
			"asda",
			"print('sdasd')",
			"python",
			"d",
			"da",
			"ada",
			"ad",
			"dad",
			"da",
			"ada",
			"a",
			"ad",
			"a",
			"asd",
			"akda",
			"Exit",
			"fdfdff",
			"nfdfdfd",
			"open",
			"iprn",
			"exit",
			"help",
			"Hepl",
			"help",
			"a;'a;aa",
			"a;a",
			"a;",
			"al'a;",
			"a;'a;'a;'a;",
			"a",
			"al",
			"a;",
			"al",
			"a",
			"la",
			"aa",
			"a",
			"ala",
			"aa",
			"aka",
			"js"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Programming/Pythone/Python Project/Groove music/v.py",
		"/C/Programming/Pythone/Python Project/Groove music/musicFind.py",
		"/C/Programming/Pythone/Python Project/Groove music/GroveMusic.py",
		"/C/Programming/Pythone/Python Project/Groove music/searchWin.py",
		"/C/Programming/Pythone/Python Project/Groove music/musicList.py",
		"/C/Programming/Pythone/Python Project/Groove music/k.py",
		"/C/Programming/Pythone/Python Project/Groove music/nowPlaying.py",
		"/C/Programming/Pythone/Python Project/Groove music/my.py",
		"/C/Programming/Pythone/Python Project/assistant/old/project.py",
		"/C/Programming/Pythone/Python Project/Groove music/bottomBar.py",
		"/C/Programming/Pythone/Python Project/Groove music/.gitignore",
		"/C/Programming/Pythone/Python Project/assistant/old/DatabaseHandleS.py",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/KiteSublime/KiteSublime.sublime-settings",
		"/C/Users/KUNALA~1/AppData/Local/Temp/kite_tutorial.py",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/KiteSublime.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/SublimeCodeIntel.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Merge/Packages/User/Preferences.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Merge/Packages/User/Commit Message.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/C/Programming/Pythone/Python Project/Mudules/osModule.py",
		"/C/software/pappa/kundli/txt/अंहकार.txt",
		"/C/software/pappa/kundli/txt/धन.txt",
		"/C/software/pappa/kundli/txt/अंगारक योग.txt",
		"/C/software/pappa/kundli/txt/ग्रह व राशी फक्त लग्न.txt",
		"/C/software/pappa/kundli/txt/मारकेश.txt",
		"/C/software/pappa/kundli/txt/देवी ची 32 नावे.txt",
		"/C/software/pappa/kundli/txt/rashi.txt",
		"/C/software/pappa/kundli/★ ●दुर्योग ●★.txt",
		"/C/software/pappa/kundli/औषधे.txt",
		"/C/Programming/Pythone/Python Project/Groove music/.git/COMMIT_EDITMSG",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/Git.sublime-settings",
		"/C/Programming/Pythone/Python Project/Groove music/main.py",
		"/C/Programming/Pythone/Python Project/Groove music/constants.py",
		"/C/Programming/Pythone/Python Project/Tkinter/1_BaseWindow.py",
		"/C/Programming/Pythone/Python Project/Tkinter/2_Frames.py",
		"/C/Programming/Java/JAVA/Chapter17.java",
		"/C/Programming/Java/JAVA/Chapter18.java",
		"/C/Programming/Java/JAVA/chapter.java",
		"/C/Programming/Java/JAVA/Chapter17_2.java",
		"/C/Programming/Java/JAVA/Chapter16.java",
		"/C/Programming/Java/JAVA/Chapter15.java",
		"/C/Programming/Java/JAVA/Demo.java",
		"/C/Programming/Java/JAVA/Chapter14.java",
		"/C/Programming/Java/JAVA/Chapter13.java",
		"/C/Programming/Java/JAVA/Chapter13.py",
		"/C/Programming/Java/JAVA/Chapter12.java",
		"/C/Programming/Java/JAVA/Chapter11.java",
		"/C/Programming/Java/JAVA/Chapter10.java",
		"/C/Programming/Java/JAVA/Chapter9.java",
		"/C/Programming/Java/JAVA/Chapter8.java",
		"/C/Programming/Java/JAVA/Chapter7.java",
		"/C/Programming/Java/JAVA/Chapter6.java",
		"/C/Programming/Java/JAVA/Chapter5.java",
		"/C/Programming/Java/JAVA/Chapter4.java",
		"/C/Programming/Java/JAVA/Chapter3.java",
		"/C/Programming/Java/JAVA/Chapter1.java",
		"/C/Programming/Java/JAVA/Chapter2.java",
		"/C/Programming/Pythone/Python Project/Django project/djanoTutorial/djanoTutorial/settings.py",
		"/C/Programming/Pythone/Python Project/Django project/djanoTutorial/djanoTutorial/views.py",
		"/C/Programming/Pythone/Python Project/Django project/djanoTutorial/djanoTutorial/templates/home.html",
		"/C/Programming/Pythone/Python Project/Django project/djanoTutorial/djanoTutorial/res/home.html",
		"/C/Programming/Pythone/Python Project/Open Cv/chapter2.py",
		"/C/Programming/Pythone/Python Project/Open Cv/chapter1.py",
		"/C/blender/Blend Files/Music Video/ILy/0371.png",
		"/C/Programming/Pythone/Python Project/Django pproject/djanoTutorial/djanoTutorial/views.py",
		"/C/Programming/Pythone/Python Project/Django pproject/djanoTutorial/djanoTutorial/urls.py",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/Dart - Plugin Settings.sublime-settings",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/Dart.sublime-settings",
		"/C/Programming/Pythone/Python Project/2048 GAME/2048-python-master/2048-python-master/puzzle.py",
		"/C/Programming/Pythone/Python Project/2048 GAME/2048-python-master/2048-python-master/MyGame/kadak.py",
		"/C/Programming/Pythone/Python Project/2048 GAME/2048-python-master/2048-python-master/logic.py",
		"/C/Programming/dart/app/lib/main.dart",
		"/C/Programming/dart/app/lib/Projects/calculator.dart",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/Default (Windows).sublime-keymap",
		"/C/Programming/dart/app/test/widget_test.dart",
		"/C/Programming/dart/app/lib/Projects/base.dart",
		"/C/Programming/dart/app/lib/theme.txt",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/Snippet/flutter/Slw.sublime-snippet",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/User/Snippet/flutter/Stfw.sublime-snippet",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Packages/dart-sublime-bundle-master/Snippets/kk.tmSnippet",
		"/C/Users/kunal Avghade/AppData/Roaming/Sublime Text 3/Installed Packages/CSS3.sublime-package",
		"/C/software/game/summertime saga/SummertimeSaga-0-19-1-pc/log.txt",
		"/C/software/game/summertime saga/SummertimeSaga-0-19-1-pc/game/script_version.txt",
		"/C/software/game/summertime saga/SummertimeSaga-0-19-5-pc/traceback.txt",
		"/C/software/game/summertime saga/SummertimeSaga-0-19-1-pc/traceback.txt",
		"/C/Users/kunal Avghade/Desktop/program.py",
		"/C/Users/kunal Avghade/Desktop/machineLearnig.py",
		"/C/Users/kunal Avghade/Desktop/corelation and covarience.py",
		"/C/software/BLENDER 2.8/addons/flip_fluids_addon V1.0.7/Guide How To.txt",
		"/C/Users/kunal Avghade/Desktop/test.py",
		"/C/Users/kunal Avghade/Desktop/finnacial aid.txt",
		"/C/software/BLENDER 2.8/addons/flip_fluids_addon V1.0.7/flip_fluids_addon/materials/material_library.py",
		"/C/software/BLENDER 2.8/addons/flip_fluids_addon V1.0.7/flip_fluids_addon/__init__.py",
		"/C/software/BLENDER 2.8/addons/flip_fluids_addon V1.0.7/flip_fluids_addon/objects/flip_fluid_material_library.py",
		"/C/Users/kunal Avghade/Desktop/Study/sdas.py",
		"/C/Users/kunal Avghade/Desktop/sada.txt",
		"/C/Users/kunal Avghade/Desktop/get-pip.py",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex6/ex6/gaussianKernel.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex6/ex6/processEmail.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex6/ex6/dataset3Params.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex6/ex6/emailFeatures.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex6/ex6/spamSample2.txt",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 7/Programming Assignment/machine-learning-ex6/ex6/readFile.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 7/Programming Assignment/machine-learning-ex6/ex6/gaussianKernel.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 7/Programming Assignment/machine-learning-ex6/ex6/emailSample2.txt",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 7/Programming Assignment/machine-learning-ex6/ex6/emailFeatures.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 7/Programming Assignment/machine-learning-ex6/ex6/processEmail.m",
		"/C/Users/kunal Avghade/Desktop/machine/func.m",
		"/C/Users/kunal Avghade/Desktop/s.py",
		"/C/Users/kunal Avghade/Desktop/da.py.txt",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex4/ex4/randInitializeWeights.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex4/ex4/sigmoidGradient.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex4/ex4/nnCostFunction.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 3/Programming Assignment/machine-learning-ex2/ex2/plotData.m",
		"/C/Users/kunal Avghade/Desktop/Corona/Corona/urls.py",
		"/C/Users/kunal Avghade/Desktop/Corona/manage.py",
		"/C/Users/kunal Avghade/Desktop/Corona/Corona/__init__.py",
		"/C/Users/kunal Avghade/Desktop/Corona/Corona/wsgi.py",
		"/C/Users/kunal Avghade/Desktop/Corona/Corona/settings.py",
		"/C/Users/kunal Avghade/Desktop/Corona/Corona/asgi.py",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 2/Programming Assignment/machine-learning-ex1/ex1/computeCost.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 2/Programming Assignment/machine-learning-ex1/ex1/plotData.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex1/ex1/computeCost.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex1/ex1/plotData.m",
		"/C/Users/kunal Avghade/Desktop/machine-learning-ex1/ex1/warmUpExercise.m",
		"/C/Programming/MACHINE/ans/Coursera-Machine-Learning-Stanford-master/Coursera-Machine-Learning-Stanford-master/Week 2/Programming Assignment/machine-learning-ex1/ex1/ex1data1.txt",
		"/C/Users/kunal Avghade/Desktop/reactapp/src/App.test.js"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 148.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"window",
			"Window",
			"window",
			"Window",
			"window",
			"Window",
			"window",
			"windowSub",
			"window",
			"windeow",
			"d",
			"print",
			"no1",
			"no",
			"j[0]",
			"06",
			"LEFT",
			"coverFRame",
			"coverframe",
			"coverFRame",
			"songName",
			"songImage",
			"backBtn",
			"nextBtn",
			"volScliderFrame",
			"scaleWindow",
			"coverframe",
			"coverFRame",
			"volScal",
			"sliderFrame",
			"volscliderFrame",
			"000"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "GroveMusic.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22246,
						"regions":
						{
						},
						"selection":
						[
							[
								1556,
								1556
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "musicFind.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2528,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 55.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 97.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.727397510981,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Terminus":
	{
		"height": 174.0
	},
	"output.dart.analyzer":
	{
		"height": 144.0
	},
	"output.dart.config.check":
	{
		"height": 490.0
	},
	"output.exec":
	{
		"height": 304.0
	},
	"output.find_results":
	{
		"height": 97.0
	},
	"output.git":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 465.0
	},
	"pinned_build_system": "Packages/Dart/Support/Dart.sublime-build",
	"project": "b.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"game.py"
			],
			[
				"ksk",
				"C:\\Programming\\WebPage\\ArduinoSketch\\ArduinoSketch.ino"
			],
			[
				"s",
				"C:\\Users\\kunal Avghade\\Desktop\\Programming\\Java\\First.java"
			],
			[
				"kuan",
				"C:\\Users\\kunal Avghade\\Desktop\\Programming\\Java\\First.java"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
